server:
  port: 8080
spring:
  application:
    name: water-system
  servlet:
    multipart:
      max-file-size: 20MB
      enabled: true
  # database connection config start
  datasource:
    username: root
    password: mynameis123
    url: jdbc:mysql://localhost:3306/water_system?useUnicode=true&useTimezone=true&serverTimezone=GMT%2B8&characterEncoding=utf8&useSSL=false
#    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      filters: stat, wall, slf4j
      filter:
        stat: # spy
          slow-sql-millis: 1000
          log-slow-sql: true
          enabled: true
        wall: # firewall
          enabled: true
          config:
            drop-table-allow: false
      stat-view-servlet:
        enabled: true
        login-username: admin
        login-password: admin
        reset-enable: false

      web-stat-filter:
        enabled: true
        url-pattern: /*
  # database connection config end

  output:
    ansi:
      enabled: detect

  # thymeleaf config start
  thymeleaf:
    mode: HTML
    encoding: UTF-8
    servlet:
      content-type: text/html
    cache: false
  # thymeleaf config end

  # road config start
  mvc:
    static-path-pattern: /**

  web:
    resources:
      static-locations: classpath:/META-INF/resources/, classpath:/resources/, classpath:/static/, classpath:/public, file:${upload-path}, file:${front-path}
# road config end



#mybatis-plus:
#  #xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
#  mapper-locations: classpath*:/mapper/*.xml
#  #MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名
#  type-aliases-package: com.cjl.watersystem.entity
#
#  global-config:
#    db-config:
#      #表名下划线命名默认true
#      table-underline: true
#      #id类型
#      id-type: auto
#      #是否开启大写命名，默认不开启
#      capital-mode: false
#      #逻辑已删除值,(逻辑删除下有效) 需要注入逻辑策略LogicSqlInjector 以@Bean方式注入
#      logic-not-delete-value: 0
#      #逻辑未删除值,(逻辑删除下有效)
#      logic-delete-value: 1
##      #数据库类型
##      db-type: sql_server

mybatis-plus:
  # Mapper.xml 文件位置 Maven 多模块项目的扫描路径需以 classpath*: 开头
  mapperLocations: classpath*:mapper/*/*Mapper.xml
  #  #MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名 实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.cjl.watersystem.entity
    #通过父类（或实现接口）的方式来限定扫描实体
  #  typeAliasesSuperType: com.vanhr.user.dao.entity.baseEntity
  #  #枚举类 扫描路径 如果配置了该属性，会将路径下的枚举类进行注入，让实体类字段能够简单快捷的使用枚举属性
  #  typeEnumsPackage: com.vanhr.user.dao.enums
  #  #启动时是否检查 MyBatis XML 文件的存在，默认不检查 仅限spring boot 使用
  #  checkConfigLocation : true
  #  #通过该属性可指定 MyBatis 的执行器，MyBatis 的执行器总共有三种：
  #  # ExecutorType.SIMPLE：该执行器类型不做特殊的事情，为每个语句的执行创建一个新的预处理语句（PreparedStatement）
  #  # ExecutorType.REUSE：该执行器类型会复用预处理语句（PreparedStatement）
  #  # ExecutorType.BATCH：该执行器类型会批量执行所有的更新语句
  #  executorType: SIMPLE
  #  # 指定外部化 MyBatis Properties 配置，通过该配置可以抽离配置，实现不同环境的配置部署
  #  configurationProperties:
  configuration: # MyBatis 原生支持的配置
    # 是否开启自动驼峰命名规则（camel case）映射
    mapUnderscoreToCamelCase: true
    # 枚举处理类,如果配置了该属性,枚举将统一使用指定处理器进行处理
    #   org.apache.ibatis.type.EnumTypeHandler : 存储枚举的名称
    #   org.apache.ibatis.type.EnumOrdinalTypeHandler : 存储枚举的索引
    #   com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler : 枚举类需要实现IEnum接口或字段标记@EnumValue注解.(3.1.2以下版本为EnumTypeHandler)
    #    defaultEnumTypeHandler: com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler
    # 配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: null
  global-config: # 全局策略配置
#    # 是否控制台 print mybatis-plus 的 LOGO
#    banner: false

    db-config:
      # id类型
      id-type: auto
      # 表名是否使用下划线命名，默认数据库表使用下划线命名
      table-underline: true
      #是否开启大写命名，默认不开启
#      capital-mode: false
      #逻辑已删除值,(逻辑删除下有效) 需要注入逻辑策略LogicSqlInjector 以@Bean方式注入
      logic-not-delete-value: 0
      #逻辑未删除值,(逻辑删除下有效)
      logic-delete-value: 1

# log config start
logging:
  level:
    com.frye.trading.dao: debug
# log config end